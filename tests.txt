Functionality | TestCase
Creates a List containing randomly generated assignments for each of the 6 Red Agents, 5 Blue Agents, 5 Green Agents, 7 Innocent Bystanders, and 2 Assassins | tests.ThreePersonAssignmentTest.testCorrectList2(), tests.ThreePersonAssignmentTest.testRandom2() 
Method defined which correctly returns whether or not the Board is in one of the winning states | tests.ThreeTBoardStateTest.testUpdateFalse(), tests.ThreeTBoardStateTest.testUpdateAssassin(), tests.ThreeTBoardStateTest.testUpdateRed(), tests.ThreeTBoardStateTest.testUpdateBlue(), tests.ThreeTBoardStateTest.testUpdateGreen()
Method defined which correctly returns which team wins once the 2nd Assassin is revealed | Method defined which correctly returns which team wins once the 2nd Assassin is revealed | tests.ThreeTBoardStateTest.winCaseAssassinRevealedTrue(), tests.ThreeTBoardStateTest.winCaseAssassinRevealedFalse(), tests.ThreeTBoardStateTest.winCaseRedRevealedTrue(), tests.ThreeTBoardStateTest.winCaseRedRevealedTrueEliminated(), tests.ThreeTBoardStateTest.winCaseRedRevealedFalseNone(),tests.ThreeTBoardStateTest.winCaseRedRevealedFalseFive(), tests.ThreeTBoardStateTest.winCaseBlueRevealedTrue(), tests.ThreeTBoardStateTest.winCaseBlueRevealedTrueEliminated(), tests.ThreeTBoardStateTest.winCaseBlueRevealedFalseNone(), tests.ThreeTBoardStateTest.winCaseBlueRevealedFalseFour(), tests.ThreeTBoardStateTest.winCaseGreenRevealedTrue(), tests.ThreeTBoardStateTest.winCaseGreenRevealedTrueEliminated(), tests.ThreeTBoardStateTest.winCaseGreenRevealedFalseNone(), tests.ThreeTBoardStateTest.winCaseGreenRevealedFalseFour() 
Method which returns which is used at the end of a turn to determine the team whose move is next (this must include the possibility that the next team in the 3-team rotation had previously Revealed an Assassin) | tests.ThreeTurnLogicTest.nextHandle(), tests.ThreeTurnLogicTest.redEliminate(), tests.ThreeTurnLogicTest.greenEliminate(), tests.ThreeTurnLogicTest.blueEliminate()